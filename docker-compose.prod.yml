version: '3.8'

services:
  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/lego_price_agent
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost
    depends_on:
      - db
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
      - lego-network
    restart: unless-stopped

  # Frontend (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - lego-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=lego_price_agent
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lego-network
    restart: unless-stopped

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - lego-network
    restart: unless-stopped

  # Celery worker for background tasks
  celery:
    build: ./backend
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/lego_price_agent
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - lego-network
    restart: unless-stopped

networks:
  lego-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 